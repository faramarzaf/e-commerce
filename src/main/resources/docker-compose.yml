services:

  e-commerce-app:
    image: e-commerce-app  # Replace this with your image name, or use 'build' for local build
    build: .
    ports:
      - "8080:8080"  # Expose the Spring Boot application on port 8080
    networks:
      - monitoring
    environment:
      - SPRING_PROFILES_ACTIVE=prod  # Optionally, set active profiles for your app


  mysql:
    image: mysql:8.0
    container_name: mysql_container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: ecommerce_db
      MYSQL_USER: ecommerce_user
      MYSQL_PASSWORD: userpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  activemq:
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'

    image: apache/activemq-classic:5.18.3
    container_name: activemq_container
    restart: always
    environment:
      ACTIVEMQ_ADMIN_LOGIN: admin
      ACTIVEMQ_ADMIN_PASSWORD: admin
    ports:
      - "8161:8161"  # Web console
      - "61616:61616" # JMS port
    volumes:
      - activemq_data:/opt/activemq/data

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml  # Mount prometheus.yml
      - prometheus_data:/prometheus  # Persistent data storage for Prometheus
    ports:
      - "9090:9090"  # Expose Prometheus UI
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"  # Grafana web UI
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Set admin password for Grafana
    volumes:
      - grafana_data:/var/lib/grafana  # Persistent data storage for Grafana
    networks:
      - monitoring
    depends_on:
      - prometheus



networks:
  monitoring:
    driver: bridge

volumes:
  mysql_data:
  activemq_data:
  prometheus_data:
  grafana_data: